import com.sun.net.httpserver.HttpServer;
import com.sun.net.httpserver.HttpHandler;
import com.sun.net.httpserver.HttpExchange;

import java.io.IOException;
import java.io.OutputStream;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.net.HttpURLConnection;
import java.net.URL;
import java.nio.file.Files;
import java.nio.file.Paths;

public class SimpleProxyServer {

    public static void main(String[] args) throws Exception {
        // Create an HTTP server on port 8080
        HttpServer server = HttpServer.create(new java.net.InetSocketAddress(8080), 0);
        server.createContext("/", new IndexHandler());
        server.createContext("/proxy", new ProxyHandler());
        server.setExecutor(null); // creates a default executor
        server.start();
        System.out.println("Proxy server is running on http://localhost:8080/");
    }

    // Handler for the index page
    static class IndexHandler implements HttpHandler {
        @Override
        public void handle(HttpExchange exchange) throws IOException {
            String response = new String(Files.readAllBytes(Paths.get("index.html")));
            exchange.sendResponseHeaders(200, response.length());
            OutputStream os = exchange.getResponseBody();
            os.write(response.getBytes());
            os.close();
        }
    }

    // Handler for proxying requests
    static class ProxyHandler implements HttpHandler {
        @Override
        public void handle(HttpExchange exchange) throws IOException {
            String query = exchange.getRequestURI().getQuery();
            String targetUrl = "http://" + query; // Assuming the query is the target URL

            // Create a connection to the target URL
            HttpURLConnection connection = (HttpURLConnection) new URL(targetUrl).openConnection();
            connection.setRequestMethod(exchange.getRequestMethod());

            // Forward the request headers
            exchange.getRequestHeaders().forEach((key, value) -> {
                connection.setRequestProperty(key, String.join(",", value));
            });

            // Get the response from the target URL
            int responseCode = connection.getResponseCode();
            InputStream responseStream = connection.getInputStream();

            // Send the response back to the client
            exchange.sendResponseHeaders(responseCode, connection.getContentLength());
            OutputStream os = exchange.getResponseBody();
            byte[] buffer = new byte[1024];
            int bytesRead;
            while ((bytesRead = responseStream.read(buffer)) != -1) {
                os.write(buffer, 0, bytesRead);
            }
            os.close();
            responseStream.close();
        }
    }
}
